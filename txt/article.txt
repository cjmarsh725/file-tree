Using a file explorer on a desktop is a routine practice, so much so that we tend to take for granted all that goes into it. There is quite a bit going on, including displaying the items in a tree structure, shaping the data in a way that allows for modification, and drag and drop operations for both files and folders. All of this makes for an excellent challenge in a React application and it is what we will create here. Note that this article assumes a basic understanding of React, Create React App, and Javascript in general.

The first step is to create a new React application and I've done some re-arranging of the default CRA output. I've relocated the App component into its own folder under the new components folder and deleted its contents so we can start from scratch. That also meant updating the import of App in index.js and removing the logo file.

[initial-structure.jpg]

For this example we'll focus on making a basic file tree component that works as part of a larger application, allowing the data from the files to be accessed in some other display. Therefore, the state for the file structure will live in the App component and we'll create a separate FileTree component. This means turning App into a class component and making a new component FileTree along with its CSS file.

Before getting started with the implementation let's go over the shape of the data for our file structure and how the tree view will be created. In order to show the heirarchy of items where folders can contain other items we'll create a TreeNode component that will have copies of itself as children. With this method we can easily hide and show nested elements based on their parent's visibility. The data therefore needs to have items that contain references to their children.